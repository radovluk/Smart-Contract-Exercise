{
  "name": "09-vulnerabilities-detection",
  "version": "1.0.0",
  "description": "Educational exercise focused on smart contract vulnerabilities detection using fuzz testing and invariant testing",
  "author": "Lukas Radovansky",
  "license": "MIT",
  "directories": {
    "test": "test",
    "src": "src"
  },
  "scripts": {
    "test:all": "forge test",
    "test:unit": "forge test --match-path test/PiggyBankUnitTest.t.sol -v",
    "test:fuzz:piggy": "forge test --match-path test/PiggyBankStatelessFuzzTest.t.sol -v",
    "test:fuzz:dex": "forge test --match-path test/SimpleDEXStatelessFuzzTest.t.sol -v",
    "test:invariant:piggy": "forge test --match-path test/PiggyBankInvarintTest.t.sol -v",
    "test:invariant:dex": "forge test --match-path test/SimpleDEXInvariantTest.t.sol -v",
    "coverage": "forge coverage"
  },
  "keywords": [
    "blockchain",
    "solidity",
    "smart-contracts",
    "foundry",
    "vulnerabilities",
    "fuzz-testing",
    "invariant-testing"
  ],
  "devDependencies": {
    "forge-std": "github:foundry-rs/forge-std#v1.8.1",
    "@openzeppelin/contracts": "5.2.0"
  }
}
